apiVersion: v1
kind: PersistentVolume
metadata:
  name: server-pv-volume
  labels:
    type: local
    app: server
spec:
  storageClassName: server-storage
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/server-data"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: server-pv-claim
  labels:
    app: server
spec:
  storageClassName: server-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      volumes:
        - name: server-data
          persistentVolumeClaim:
            claimName: server-pv-claim
      containers:
        - name: server
          image: node
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/sh
            - /root/start-server.sh
          volumeMounts:
            - mountPath: /root
              name: server-data
          env:
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: application-secrets
                  key: PGHOST
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: application-secrets
                  key: PGPORT
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: application-secrets
                  key: PGUSER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: application-secrets
                  key: PGPASSWORD
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: application-secrets
                  key: PGDATABASE
          ports:
            - name: svr
              containerPort: 8000

---

apiVersion: v1
kind: Service
metadata:
  name: server-service
spec:
  type: NodePort
  selector:
    app: server
  ports:
    - protocol: TCP
      nodePort: 30443
      port: 8000
